{"version":3,"sources":["webpack://Beat-Blade-yarn-edition/./src/components/beatBlade/index.js","webpack://Beat-Blade-yarn-edition/./src/pages/game/index.js"],"names":["BeatBlade","constructor","size","event","this","startGame","stopGame","success","failure","subElements","target","classList","contains","score","textContent","random","getRandomIntInclusive","append","goblin","alert","clearInterval","start","fail","render","wrapper","document","createElement","innerHTML","getTemplate","element","firstElementChild","getSubElements","initEventListeners","cells","addEventListener","onStart","onStop","onPick","update","body","getBody","pick","remove","setInterval","add","max","min","Math","ceil","floor","elements","querySelectorAll","item","dataset","getCell","i","push","index","join","destroy","Page","components","beadBlade","value","console","log","initComponents","renderComponents","Object","keys","forEach","component","root","radio","onChangeSize","removeEventListeners","values"],"mappings":"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","file":"game-index-js-684.js","sourcesContent":["\n\nexport default class BeatBlade {\n    subElements = {};\n    start;\n    score = 0;\n\n\n    onStart = (event) => {\n        this.startGame();\n    }\n\n    onStop = (event) => {\n        this.stopGame();\n    }\n\n    onPick = (event) => {\n\n        const { success, failure } = this.subElements;\n\n        const element = event.target;\n\n        if (element.classList.contains('beadBlade__goblin')) {\n            this.score += 1;\n            success.textContent = this.score;\n\n            const random = this.getRandomIntInclusive(this.size * this.size);\n            this.subElements[random].append(this.subElements.goblin);\n            if (this.score === 5) return alert('you are win');\n\n            clearInterval(this.start);\n            this.startGame();\n            \n        } else {\n            this.fail -= 1;\n            failure.textContent = this.fail;\n\n            if (this.fail === 0) {\n                this.stopGame()\n                return alert('you are lose');\n            }\n        }\n    }\n\n\n    constructor(size = 4) {\n        this.size = size >= 4 ? size : 4;\n        this.score = 0;\n        this.fail = 5;\n        this.render();\n    }\n\n    render() {\n        const wrapper = document.createElement('div');\n\n        wrapper.innerHTML = this.getTemplate();\n        this.element = wrapper.firstElementChild;\n\n        this.subElements = this.getSubElements();\n        this.initEventListeners();\n    }\n\n    initEventListeners() {\n        const { startGame, stopGame, cells } = this.subElements;\n\n        startGame.addEventListener('click', this.onStart);\n        stopGame.addEventListener('click', this.onStop);\n        cells.addEventListener('click', this.onPick);\n    }\n\n    update(size) {\n\n        const { body } = this.subElements;\n        this.stopGame();\n        this.size = size;\n        body.innerHTML = this.getBody()\n        this.subElements = this.getSubElements();\n        this.initEventListeners();\n\n    }\n\n    startGame(pick) {\n\n        const { goblin } = this.subElements;\n\n        if (goblin.classList.contains('beadBlade__img-hidden')) {\n            goblin.classList.remove('beadBlade__img-hidden');\n        }\n        \n\n        this.start = setInterval(() => {\n            const random = this.getRandomIntInclusive(this.size * this.size);\n            this.subElements[random].append(this.subElements.goblin);\n        }, 1000)\n\n    }\n\n    stopGame() {\n\n        const { success, failure } = this.subElements;\n\n        this.fail = 5;\n        this.score = 0;\n\n        success.textContent = this.score;\n        failure.textContent = this.score;\n\n        this.subElements.goblin.classList.add('beadBlade__img-hidden');\n        clearInterval(this.start)\n    }\n\n\n    getRandomIntInclusive(max) {\n        let min = Math.ceil(0);\n        max = Math.floor(max - 1);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getSubElements() {\n        const elements = this.element.querySelectorAll('[data-element]');\n\n        for (const item of elements) {\n            this.subElements[item.dataset.element] = item;\n        }\n\n        return this.subElements;\n    }\n\n    getCell(size) {\n        const cells = [];\n        const cell = (index) => {\n            return index === 0 ?\n                `<div class=\"beadBlade__cell\" data-element=\"${index}\">\n                    <div class=\"beadBlade__img beadBlade__img-hidden\" data-element=\"goblin\">\n                        <img src=\"./assets/favicon/goblin.png\" alt=\"goblin\" class=\"beadBlade__goblin\">\n                    </div>\n                 </div>` :\n                `<div class=\"beadBlade__cell\" data-element=\"${index}\"></div>`\n        }\n        for (let i = 0; i < size; i++) {\n            cells.push(cell(i))\n        };\n\n        return cells.join('');\n    }\n\n    getBody() {\n        return `<div class=\"beadBlade\" style=\"width: ${(this.size * 160)}px\">\n        <div class=\"beadBlade__cells\" data-element=\"cells\">\n        ${this.getCell(this.size * this.size)}\n        </div>\n </div>`\n    }\n\n\n\n    getTemplate() {\n        return `<div>\n        <button  class=\"button button_secondary\" data-element=\"startGame\">\n        Start\n     </button>\n     <button class=\"button button_secondary\" data-element=\"stopGame\">\n         Stop\n     </button>\n     <div class=\"score score_success\" data-element=\"success\">0</div>\n     <div class=\"score score_failure\" data-element=\"failure\">5</div>\n        <div data-element=\"body\">\n                ${this.getBody()}\n        </div>\n    </div>`\n    }\n\n\n\n    remove() {\n        if (this.element) {\n            this.element.remove();\n        }\n    }\n\n    destroy() {\n        this.remove();\n        this.element = null;\n        this.subElements = null;\n    }\n\n\n}","import BeatBlade from \"../../components/beatBlade\";\n\n\nexport default class Page {\n    subElements = {};\n    components = {};\n\n\n\n    onChangeSize = (event) => {\n        this.components.beadBlade.update(event.target.value)\n    }\n\n\n\n    render() {\n\n        const element = document.createElement('div');\n        element.innerHTML = this.getTemplate();\n\n        this.element = element.firstElementChild;\n\n        this.subElements = this.getSubElements();\n        console.log('gdhkjhdgkj')\n        this.initComponents();\n        this.renderComponents();\n        this.initEventListeners();\n\n        return this.element;\n    }\n\n\n    initComponents() {\n        const beadBlade = new BeatBlade()\n\n        this.components = {\n            beadBlade,\n        }\n    }\n\n    renderComponents() {\n        Object.keys(this.components).forEach(component => {\n            const root = this.subElements[component];\n            const { element } = this.components[component];\n            root.append(element);\n        })\n    }\n\n    initEventListeners() {\n        let change = this.element.querySelectorAll('input[name=\"size\"]');\n        change.forEach((radio) => {\n            radio.addEventListener('change', this.onChangeSize);\n        })\n\n    }\n\n    getSubElements() {\n        const elements = this.element.querySelectorAll('[data-element]')\n        for (const item of elements) {\n            this.subElements[item.dataset.element] = item;\n        }\n        return this.subElements;\n    }\n\n    removeEventListeners() {\n        this.removeEventListeners();\n    }\n\n    remove() {\n        if (this.element) {\n            this.element.remove()\n        }\n    }\n\n    destroy() {\n        this.remove();\n        this.element = null;\n        this.subElements = null;\n\n\n        for (const component of Object.values(this.components)) {\n            component.destroy();\n        }\n    }\n\n\n    getTemplate() {\n        return `\n        <div data-element=\"beadBlade\">\n        \n        <div data-element=\"beadBlade\">\n\n        <input type=\"radio\" id=\"contactChoice1\"\n         name=\"size\" value=\"4\">\n        <label for=\"contactChoice1\">4</label>\n    \n        <input type=\"radio\" id=\"contactChoice2\"\n         name=\"size\" value=\"5\">\n        <label for=\"contactChoice2\">5</label>\n    \n        <input type=\"radio\" id=\"contactChoice3\"\n         name=\"size\" value=\"6\">\n        <label for=\"contactChoice3\">6</label>\n\n        </div>\n    </div>\n        `\n    }\n}"],"sourceRoot":""}